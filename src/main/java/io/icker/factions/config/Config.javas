package io.icker.factions.config;

import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

import io.icker.factions.FactionsMod;
import net.fabricmc.loader.api.FabricLoader;

public class Config {
    private static final File configDir = FabricLoader.getInstance().getGameDir().resolve("factions").toFile();
    private static final Gson GSON = new GsonBuilder().setPrettyPrinting().create();

    public int BASE_POWER = 20;
    public int MEMBER_POWER = 20;
    public int CLAIM_COST = 10;
    public int MAX_FACTION_SIZE = 4;
    public int SAFE_TICKS_TO_WARP = 20 * 5;
    public int POWER_DEATH_PENALTY = 10;
    public int TICKS_FOR_POWER = 10 * 60 * 20; // 10 mins
    public int TICKS_FOR_POWER_REWARD = 1;

    public static List<String> DIMENSION_WHITELIST = Arrays.asList("*");
    public static List<String> DIMENSION_BLACKLIST = Arrays.asList("minecraft:the_end");

    public static Config load() {
        File config = new File(configDir, "config.json");

        if (config.exists()) {
            try {
                FileReader reader = new FileReader(config);
                Config parsed = GSON.fromJson(reader, Config.class);
                reader.close();
                return parsed;
            } catch (IOException e) {
                FactionsMod.LOGGER.error("Factions failed to load config file");
            }
        } 
        return new Config();
    }

    public boolean dimensionAllowed(String dimension) {
        return (DIMENSION_WHITELIST.contains(dimension) || DIMENSION_WHITELIST.contains("*") ) && !DIMENSION_BLACKLIST.contains(dimension);
    }
}
